version: '3.8'

networks:
  messenger:
    driver: bridge

services:
  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    restart: always
    container_name: nginx
    ports:
      - "80:80"
      - "3001:3001"
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - frontend
      - api
    networks:
      - messenger

  api:
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
    container_name: api
    volumes:
      - ./docker/api/xdebug/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - api_data:/var/www/
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - mysql
    networks:
      - messenger

  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend/Dockerfile
    container_name: frontend
    restart: unless-stopped
    user: '1000:1000'
    volumes:
      - frontend_data:/var/www
#      - /var/www/node_modules/
    networks:
      - messenger


  mysql:
    image: mysql:8.0.32
    container_name: mysql
    restart: always
    ports:
      - "3306:3306"
    user: '1000:1000'
    environment:
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: 'messenger'
      MYSQL_PASSWORD: 'root'
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - messenger

volumes:
  api_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './api'
  frontend_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './frontend'
  mysql_data: